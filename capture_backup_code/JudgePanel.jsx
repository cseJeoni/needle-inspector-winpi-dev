import Panel from "./Panel"
import { Button } from "./Button"

export default function JudgePanel({ onJudge, isStarted, onReset, camera1Ref, camera2Ref, hasNeedleTip = true, websocket, isWsConnected, onCaptureMergedImage, eepromData, generateUserBasedPath, isWaitingEepromRead = false, onWaitingEepromReadChange }) {
  // ÎãàÎì§ DOWN Î™ÖÎ†π Ï†ÑÏÜ° Ìï®Ïàò (Î©îÏù∏ WebSocket ÏÇ¨Ïö©)
  const sendNeedleDown = () => {
    if (websocket && isWsConnected) {
      console.log('ÌåêÏ†ï ÌõÑ ÎãàÎì§ DOWN Î™ÖÎ†π Ï†ÑÏÜ°')
      websocket.send(JSON.stringify({ cmd: "move", position: 0, mode: "position" }))
    } else {
      console.error('WebSocket Ïó∞Í≤∞ÎêòÏßÄ ÏïäÏùå - ÎãàÎì§ DOWN Î™ÖÎ†π Ïã§Ìå®')
    }
  }



  // Î≥ëÌï©Îêú Ïä§ÌÅ¨Î¶∞ÏÉ∑ÏùÑ Ï†ÄÏû•ÌïòÎäî Ìï®Ïàò
  const saveMergedScreenshot = async (judgeResult, eepromData) => {
    if (!onCaptureMergedImage) {
      console.error('Î≥ëÌï© Ï∫°Ï≤ò Ìï®ÏàòÍ∞Ä ÏóÜÏäµÎãàÎã§.');
      return;
    }

    try {
      // Î≥ëÌï©Îêú Ïù¥ÎØ∏ÏßÄ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
      const mergedImageData = await onCaptureMergedImage(judgeResult, eepromData);
      
      if (!mergedImageData) {
        console.error('‚ùå Î≥ëÌï© Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ± Ïã§Ìå®');
        return;
      }

      // Í∏∞Ï°¥ ÎèôÍ∏∞ ÌùêÎ¶ÑÏùÑ Ïú†ÏßÄÌïòÎäî Î†àÍ±∞Ïãú Í≤ΩÎ°ú: Ï∫°Ï≤ò ÌõÑ Ï†ÄÏû•ÍπåÏßÄ ÏôÑÎ£å
      await saveMergedScreenshotFromData(mergedImageData, judgeResult, eepromData);
      
    } catch (error) {
      console.error('‚ùå Î≥ëÌï© Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• Ïã§Ìå®:', error);
    }
  };

  // 'Ïù¥ÎØ∏ Ï∫°Ï≤òÎêú' Î≥ëÌï© Ïù¥ÎØ∏ÏßÄ Îç∞Ïù¥ÌÑ∞(URL)Î•º Î∞õÏïÑ ÌååÏùºÎ°ú Ï†ÄÏû•ÌïòÎäî Ìï®Ïàò
  const saveMergedScreenshotFromData = async (mergedImageData, judgeResult, eepromData) => {
    try {
      // ÌååÏùºÎ™Ö ÏÉùÏÑ±: Ï∫°Ï≥êÎÇ†Ïßú_Ï∫°Ï≥êÏãúÍ∞Å_ÌåÅÌÉÄÏûÖ_Ï†úÏ°∞ÏùºÏûê_ÏûëÏóÖÏûêÏΩîÎìú_ÏûëÏóÖÏûêÏù¥Î¶Ñ
      const date = new Date();
      const captureDate = `${String(date.getFullYear()).slice(-2)}${String(date.getMonth() + 1).padStart(2, '0')}${String(date.getDate()).padStart(2, '0')}`;
      const captureTime = `${String(date.getHours()).padStart(2, '0')}${String(date.getMinutes()).padStart(2, '0')}${String(date.getSeconds()).padStart(2, '0')}`;
      
      // EEPROM Îç∞Ïù¥ÌÑ∞ÏóêÏÑú ÌåÅÌÉÄÏûÖÍ≥º Ï†úÏ°∞ÏùºÏûê Ï∂îÏ∂ú
      let tipType = 'T000';
      let mfgDate = '000000';
      
      if (eepromData && eepromData.tipType) {
        tipType = `T${String(eepromData.tipType).padStart(3, '0')}`;
      }
      
      if (eepromData && eepromData.year && eepromData.month && eepromData.day) {
        mfgDate = `${String(eepromData.year).slice(-2)}${String(eepromData.month).padStart(2, '0')}${String(eepromData.day).padStart(2, '0')}`;
      }
      
      // ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï∂îÏ∂ú (Firebase ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÌôúÏö©)
      let workerCode = 'unkn';
      let workerName = 'unknown';
      
      // generateUserBasedPath Ìï®ÏàòÎ•º ÌÜµÌï¥ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÌôïÏù∏ (ÏûÑÏãúÎ°ú ÏÇ¨Ïö©)
      if (generateUserBasedPath) {
        const tempPath = generateUserBasedPath('TEMP');
        const pathParts = tempPath.split('\\');
        const userFolder = pathParts[2]; // C:\\Inspect\\{userFolder}\\...
        
        if (userFolder && userFolder !== 'undefined') {
          const userParts = userFolder.split('-');
          if (userParts.length === 2) {
            workerCode = userParts[0];
            workerName = userParts[1];
          }
        }
      }
      
      const fileName = `${captureDate}_${captureTime}_${tipType}_${mfgDate}_${workerCode}_${workerName}.png`;

      // ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Í∏∞Î∞ò Ìè¥Îçî Í≤ΩÎ°ú ÏÉùÏÑ±
      const baseDir = generateUserBasedPath ? generateUserBasedPath(judgeResult) : 
                     (judgeResult === 'NG' ? 'C:\\Inspect\\NG' : 'C:\\Inspect\\PASS');
      
      // Ìè¥ÎçîÍ∞Ä ÏóÜÏúºÎ©¥ ÏÉùÏÑ± (Electron API ÏÇ¨Ïö©)
      await window.electronAPI.ensureDir(baseDir);
      
      const savePath = `${baseDir}\\${fileName}`;
      
      // Electron APIÎ•º ÌÜµÌï¥ ÌååÏùº Ï†ÄÏû•
      const result = await window.electronAPI.saveFile(savePath, mergedImageData);
      
      if (result.success) {
        console.log(`‚úÖ Î≥ëÌï© Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• ÏôÑÎ£å: ${savePath}`);
      } else {
        throw new Error(result.error);
      }
      
    } catch (error) {
      console.error('‚ùå Î≥ëÌï© Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• Ïã§Ìå®:', error);
    }
  };

  // ÌåêÏ†ï Î°úÏßÅÏùÑ Ï≤òÎ¶¨ÌïòÎäî Ï§ëÏïô Ìï®Ïàò
  const handleJudge = async (result) => {
    try {
      // 1. EEPROM Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö© (propsÎ°ú Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞)
      console.log('üì° EEPROM Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©:', eepromData);

      // 2. Ï∫°Ï≤ò Î®ºÏ†Ä ÏàòÌñâÌïòÏó¨ 'ÌôîÎ©¥ Í∑∏ÎåÄÎ°ú' ÌôïÎ≥¥
      const mergedImageData = await onCaptureMergedImage(result, eepromData);

      // 3. Ï∫°Ï≤òÍ∞Ä ÌôïÎ≥¥ÎêòÎ©¥ Ï¶âÏãú ÎãàÎì§ DOWN (ÏûëÏóÖ ÎåÄÍ∏∞ ÏãúÍ∞Ñ ÏµúÏÜåÌôî)
      sendNeedleDown();

      // 4. ÎîîÏä§ÌÅ¨ Ï†ÄÏû•ÏùÄ ÎπÑÎèôÍ∏∞Î°ú ÏßÑÌñâÌïòÏó¨ UI/ÎèôÏûë ÏßÄÏó∞ ÏµúÏÜåÌôî
      //    Ïã§Ìå® Ïãú Î°úÍ∑∏Îßå ÎÇ®ÍπÄ (ÌïÑÏöîÌïòÎã§Î©¥ Ïû¨ÏãúÎèÑ Î°úÏßÅ Ï∂îÍ∞Ä Í∞ÄÎä•)
      saveMergedScreenshotFromData(mergedImageData, result, eepromData).catch(err => {
        console.error('‚ùå ÎπÑÎèôÍ∏∞ Î≥ëÌï© Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû• Ïã§Ìå®:', err);
      });
      
      // ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
      if (onReset) onReset()
      if (onWaitingEepromReadChange) onWaitingEepromReadChange(false) // EEPROM ÏùΩÍ∏∞ ÎåÄÍ∏∞ ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
      
      // ÏΩúÎ∞± Ìò∏Ï∂ú
      if (onJudge) onJudge(result)

    } catch (error) {
      console.error(`‚ùå ${result} ÌåêÏ†ï Ï≤òÎ¶¨ Ï§ë ÏóêÎü¨ Î∞úÏÉù:`, error);
    }
  };

  const handleNGClick = () => {
    console.log("NG ÌåêÏ†ï");
    handleJudge('NG');
  };

  const handlePassClick = () => {
    console.log("PASS ÌåêÏ†ï");
    handleJudge('PASS');
  };

  return (
    <Panel title="ÌåêÏ†ï">
      <div style={{ display: 'flex', gap: '1dvw', height: '100%' }}>
        {/* NG Î≤ÑÌäº */}
        <Button
          onClick={handleNGClick}
          disabled={!isStarted || !hasNeedleTip || isWaitingEepromRead}
          style={{
            flex: 1,
            backgroundColor: (isStarted && hasNeedleTip && !isWaitingEepromRead) ? '#C22727' : '#6B7280',
            color: 'white',
            fontSize: '2dvh',
            fontWeight: 'bold',
            border: 'none',
            borderRadius: '0.375rem',
            cursor: (isStarted && hasNeedleTip && !isWaitingEepromRead) ? 'pointer' : 'not-allowed',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            height: '30dvh',
            opacity: (isStarted && hasNeedleTip && !isWaitingEepromRead) ? 1 : 0.6
          }}
        >
          NG
        </Button>
        
        {/* PASS Î≤ÑÌäº */}
        <Button
          onClick={handlePassClick}
          disabled={!isStarted || !hasNeedleTip || isWaitingEepromRead}
          style={{
            flex: 1,
            backgroundColor: (isStarted && hasNeedleTip && !isWaitingEepromRead) ? '#0CB56C' : '#6B7280',
            color: 'white',
            fontSize: '2dvh',
            fontWeight: 'bold',
            border: 'none',
            borderRadius: '0.375rem',
            cursor: (isStarted && hasNeedleTip && !isWaitingEepromRead) ? 'pointer' : 'not-allowed',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            height: '30dvh',
            opacity: (isStarted && hasNeedleTip && !isWaitingEepromRead) ? 1 : 0.6
          }}
        >
          PASS
        </Button>
      </div>
    </Panel>
  )
}
